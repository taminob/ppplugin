@PACKAGE_INIT@

include(CMakeFindDependencyMacro)
find_dependency(Boost @Boost_VERSION_MAJOR@ COMPONENTS headers filesystem
                python)
find_dependency(Python @Python_VERSION_MAJOR@ COMPONENTS Development)
find_dependency(Lua @LUA_VERSION_MAJOR@)

check_required_components("@PROJECT_NAME@")

set(PPPLUGIN_INCLUDE_DIR ${PACKAGE_PREFIX_DIR}/include)
set(PPPLUGIN_LIBRARY_DIR ${PACKAGE_PREFIX_DIR}/lib)

macro(ppplugin_load_targets_config IS_SHARED)
  if(${IS_SHARED})
    set(TARGETS_TYPE "shared")
    set(TARGETS_FILE
        "${CMAKE_CURRENT_LIST_DIR}/@TARGETS_SHARED_CMAKE_FILENAME@")
  else()
    set(TARGETS_TYPE "static")
    set(TARGETS_FILE
        "${CMAKE_CURRENT_LIST_DIR}/@TARGETS_STATIC_CMAKE_FILENAME@")
  endif()
  if(NOT EXISTS "${TARGETS_FILE}")
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
        "ppplugin ${TARGETS_TYPE} library not found!")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
  endif()
  include("${TARGETS_FILE}")
endmacro()

if(NOT TARGET @PROJECT_NAME@::@LIBRARY_NAME@)
  if(${PPPLUGIN_SHARED})
    ppplugin_load_targets_config(YES)
  else()
    ppplugin_load_targets_config(NO)
  endif()
endif()
